{"version":3,"file":"metadata.min.js","sources":["../src/metadata.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * AMD module for providing metadata related manipulation functions\n * @module     mod_sharedresource/metadata\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n// jshint unused: true, undef:true\ndefine(['jquery', 'core/log'], function ($, log) {\n\n    var metadata = {\n\n        init: function() {\n            log.debug('AMD Mod sharedresource metadata utilities initialized');\n        },\n\n        /**\n         * Given an element id as m_n_o:x_y_z, gives the next to come\n         * leaf element in sequence\n         * @param {string} elementid the element id as m_n_o:x_y_z\n         */\n        next_occurrence : function(elementid) {\n            var parts = elementid.split(':');\n            var instanceid = parts[1];\n            var pathelms = instanceid.split('_');\n            var lastpart = pathelms.pop();\n            lastpart++;\n            pathelms.push(lastpart);\n            instanceid = pathelms.join('_');\n            parts[1] = instanceid;\n            elementid = parts.join(':');\n            return elementid;\n        },\n\n        /**\n         * Given an element id as mnx_nny_onz, gives the next to come\n         * leaf element in sequence, that is ; mnx_nny_on(z + 1)\n         * @param {string} elementname the element name as mnx_nny_onz\n         */\n        next_occurrence_name : function(elementname) {\n            var parts = elementname.split('n');\n            var lastoccurrence = parts.pop();\n            lastoccurrence++;\n            parts.push(lastoccurrence);\n            elementname = parts.join('n');\n            return elementname;\n        },\n\n        /**\n         * Given an element name as mnx_nny_onz, gives the first parent as\n         * mnx_nny\n         * @param {string} elementname the name of the element as mnx_nny_onz\n         */\n        parent_name : function(elementname) {\n            var parts = elementname.split('_');\n            parts.pop();\n            return parts.join('_');\n        }\n\n    };\n\n    return metadata;\n});"],"names":["define","$","log","init","debug","next_occurrence","elementid","parts","split","instanceid","pathelms","lastpart","pop","push","join","next_occurrence_name","elementname","lastoccurrence","parent_name"],"mappings":";;;;;AAqBAA,qCAAO,CAAC,SAAU,aAAa,SAAUC,EAAGC,WAEzB,CAEXC,KAAM,WACFD,IAAIE,MAAM,0DAQdC,gBAAkB,SAASC,eACnBC,MAAQD,UAAUE,MAAM,KACxBC,WAAaF,MAAM,GACnBG,SAAWD,WAAWD,MAAM,KAC5BG,SAAWD,SAASE,aACxBD,WACAD,SAASG,KAAKF,UACdF,WAAaC,SAASI,KAAK,KAC3BP,MAAM,GAAKE,WACXH,UAAYC,MAAMO,KAAK,MAS3BC,qBAAuB,SAASC,iBACxBT,MAAQS,YAAYR,MAAM,KAC1BS,eAAiBV,MAAMK,aAC3BK,iBACAV,MAAMM,KAAKI,gBACXD,YAAcT,MAAMO,KAAK,MAS7BI,YAAc,SAASF,iBACfT,MAAQS,YAAYR,MAAM,YAC9BD,MAAMK,MACCL,MAAMO,KAAK"}